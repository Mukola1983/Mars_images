{"version":3,"sources":["API/Utils.js","API/rovers.js","store/photosReduser.js","App.jsx","store/index.js","index.js"],"names":["Utils","checkStatus","response","status","error","Error","statusText","parseJSON","json","fetchJSON","url","fetch","then","curiosity","spirit","opportynity","API_KEY","defaultState","photos","ADD_API","App","dispatch","useDispatch","useSelector","state","photosReduser","type","onClick","roverName","page","sol","camera","data","payloud","length","map","photo","src","img_src","alt","id","rootRedusers","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"+LAAqBA,E,kCAAAA,EACZC,YAAc,SAACC,GACpB,GAAIA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC9C,OAAOD,EAET,IAAME,EAAQ,IAAIC,MAAMH,EAASI,YAGjC,MADAF,EAAMF,SAAWA,EACXE,GARWJ,EAWZO,UAAY,SAACL,GAAD,OAAcA,EAASM,QAXvBR,EAaZS,UAAY,SAACC,GAAD,OACjBC,MAAMD,GAAKE,KAdMZ,EAcIC,aAAaW,KAdjBZ,EAc2BO,YAd3BP,EAgBZa,UACL,qNAjBiBb,EAmBZc,OACL,+KApBiBd,EAsBZe,YACL,8FCnBJ,IAAMC,EAAU,2C,cCJVC,EAAe,CACnBC,OAAQ,IAEJC,EAAU,U,OCED,SAASC,IACtB,IAAMC,EAAWC,cACXJ,EAASK,aAAY,SAACC,GAAD,OAAWA,EAAMC,cAAcP,UAE1D,OACE,gCACE,4CAEA,wBACEQ,KAAK,SACLC,QAAS,WFTO,IAACC,EAAWC,EAAMC,EAAKC,GAAtBH,EEUN,SFViBC,EEUP,EFVaC,EEUV,EFT9B9B,EAAMS,UAAN,yDACoDmB,EADpD,uBAC4EE,EAD5E,iBACwFD,EADxF,YACgGE,EADhG,oBACkHf,KEQjFJ,MAAK,SAACoB,GDDnB,IAACC,ECEXZ,GDFWY,ECEKD,EAAKd,ODFG,CAAEQ,KAAMP,EAASc,iBCF/C,0BAWA,8BACGf,EAAOgB,OAAS,EACf,8BACGhB,EAAOiB,KAAI,SAACC,GAAD,OACV,8BACE,qBAAKC,IAAKD,EAAME,QAASC,IAAI,MADrBH,EAAMI,SAMpB,8BACE,+D,2BC9BNC,EAAeC,0BAAgB,CACnCjB,cFD2B,WAAmC,IAAlCD,EAAiC,uDAAzBP,EAAc0B,EAAW,uCAC7D,OAAQA,EAAOjB,OACRP,EACI,2BAAKK,GAAZ,IAAmBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,YAAuByB,EAAOV,YAGhDT,KEFAoB,EAAQC,sBACnBJ,EACAK,8BAAoBC,0BAAgBC,OCJtCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAACxB,EAAD,MAEF+B,SAASC,eAAe,W","file":"static/js/main.4580450f.chunk.js","sourcesContent":["export default class Utils {\r\n  static checkStatus = (response) => {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return response\r\n    }\r\n    const error = new Error(response.statusText)\r\n\r\n    error.response = response\r\n    throw error\r\n  }\r\n\r\n  static parseJSON = (response) => response.json()\r\n\r\n  static fetchJSON = (url) =>\r\n    fetch(url).then(this.checkStatus).then(this.parseJSON)\r\n\r\n  static curiosity =\r\n    'url(https://media.istockphoto.com/photos/mars-rover-robotic-space-autonomous-vehicle-on-a-deserted-planet-with-picture-id1006754478?k=6&m=1006754478&s=612x612&w=0&h=_Hi8PjNujyMRYbgQ4Dc73dKTs6kcd9UGK_nN2m-Q7QA=)'\r\n\r\n  static spirit =\r\n    'url(https://www.usnews.com/dims4/USNEWS/65864f1/2147483647/resize/640x/quality/85/?url=https%3A%2F%2Fwww.usnews.com%2Fdbimages%2Fmaster%2F13635%2FFE_PR_091112NASArover.jpg)'\r\n\r\n  static opportynity =\r\n    'url(https://solarsystem.nasa.gov/system/content_pages/main_images/1057_1057_rover2_768.jpg)'\r\n}\r\n\r\n// 59CDafTnK5TeXMtpaRwlrBGoJJ0WoLciNEVfIe5z\r\n","import Utils from './Utils'\r\n\r\n// const API_KEY = process.env.REACT_APP_MARS_KEY;\r\n\r\nconst API_KEY = '59CDafTnK5TeXMtpaRwlrBGoJJ0WoLciNEVfIe5z'\r\n\r\nexport const getPhoto = (roverName, page, sol, camera) =>\r\n  Utils.fetchJSON(\r\n    `https://api.nasa.gov/mars-photos/api/v1/rovers/${roverName}/photos?sol=${sol}&page=${page}&${camera}&api_key=${API_KEY}`\r\n  )\r\n\r\nexport const manifest = () =>\r\n  Utils.fetchJSON(\r\n    `https://api.nasa.gov/mars-photos/api/v1/rovers/?api_key=${API_KEY}`\r\n  )\r\n","const defaultState = {\r\n  photos: [],\r\n}\r\nconst ADD_API = 'ADD_API'\r\n\r\nexport const photosReduser = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case ADD_API:\r\n      return { ...state, photos: [...state.photos, ...action.payloud] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const addApi = (payloud) => ({ type: ADD_API, payloud })\r\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPhoto } from \"./API/rovers\";\nimport { addApi } from \"./store/photosReduser\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const photos = useSelector((state) => state.photosReduser.photos);\n\n  return (\n    <div>\n      <p>Mars photos</p>\n\n      <button\n        type=\"submit\"\n        onClick={() => {\n          getPhoto(\"Spirit\", 1, 1).then((data) => {\n            dispatch(addApi(data.photos));\n          });\n        }}\n      >\n        Add customer\n      </button>\n\n      <div>\n        {photos.length > 0 ? (\n          <div>\n            {photos.map((photo) => (\n              <div key={photo.id}>\n                <img src={photo.img_src} alt=\"\" />\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div>\n            <p>customers list is empty</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { photosReduser } from './photosReduser'\r\n\r\nconst rootRedusers = combineReducers({\r\n  photosReduser,\r\n})\r\n\r\nexport const store = createStore(\r\n  rootRedusers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}